{"version":3,"file":"index.js","sources":["../src/animate-text-count.js","../src/leave-application.js","../src/menu.js","../src/scrollFix.js","../src/master-language.js","../src/students-slider.js"],"sourcesContent":["export default function animateTextCount(element, finishNumber, speedProgress = 3, duration = 200) {\n  let start = performance.now();\n\n  function step(timestamp) {\n    if (start === undefined) {\n      start = timestamp;\n    }\n\n    const timeFraction = (timestamp - start) / duration;\n    const quad = Math.pow(timeFraction, speedProgress);\n    const shift = Math.abs(Math.min(quad, 1000)).toFixed();\n\n    element.innerHTML = shift;\n\n    if (shift < finishNumber) {\n      requestAnimationFrame(step);\n    }\n  }\n\n  requestAnimationFrame(step);\n}","import animateTextCount from './animate-text-count.js';\n\nconst intersectionObserverCallback = (entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      animateTextCount(\n        document.querySelector('.side-image-content-title'),\n        1000,\n        3,\n      );\n    }\n  });\n};\n\nconst options = {\n  root: document,\n  rootMargin: '0px',\n  threshold: 0.8,\n};\n\nconst observer = new IntersectionObserver(intersectionObserverCallback, options);\nobserver.observe(document.querySelector('.leave-an-application'));","const body = document.body;\nconst overlayMenu = document.querySelector('.overlay-menu');\nconst burgerMenu = document.querySelector('.burger-menu');\nconst closeMenu = document.querySelector('.close-menu');\nconst menuLinks = document.querySelectorAll('.overlay-menu a');\n\nconst closeMenuWithAnimation = () => {\n  overlayMenu.classList.add('closing');\n  overlayMenu.addEventListener(\n    'transitionend',\n    () => {\n      overlayMenu.classList.remove('active', 'closing');\n      body.classList.remove('no-scroll');\n    },\n    { once: true }\n  );\n};\n\nburgerMenu.addEventListener('click', () => {\n  overlayMenu.classList.add('active');\n  body.classList.add('no-scroll');\n});\n\ncloseMenu.addEventListener('click', closeMenuWithAnimation);\n\nmenuLinks.forEach(link => {\n  link.addEventListener('click', closeMenuWithAnimation); // Закрываем меню\n});\n","const header = document.querySelector('.header');\nconst headerHeight = header.offsetHeight;\n\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(link => {\n  link.addEventListener('click', function (e) {\n    e.preventDefault();\n\n    const targetId = this.getAttribute('href').slice(1);\n    const targetElement = document.getElementById(targetId);\n\n    if (targetElement) {\n      const offsetPosition =\n        targetElement.getBoundingClientRect().top +\n        window.scrollY -\n        headerHeight;\n      window.scrollTo({\n        top: offsetPosition,\n        behavior: 'smooth',\n      });\n    }\n  });\n});\n","const container = document.querySelector('.english-package-card');\n// Max values\nconst maxRotate1 = -8;\nconst maxRotate2 = 11;\nlet rotate1 = 0;\nlet rotate2 = 0;\nlet containerVisible = false;\n\n// Intersection Observer to detect that container is visible\nconst observer = new IntersectionObserver((entries) => {\n  containerVisible = entries[0].isIntersecting;\n}, {\n  root: null,\n  threshold: 0.1\n});\n\nobserver.observe(container);\n\nwindow.addEventListener('scroll', () => {\n  if (!containerVisible) {\n    rotate1 = 0;\n    rotate2 = 0;\n    return;\n  }\n\n  // Get the container's bounding rectangle\n  const rect = container.getBoundingClientRect();\n  const containerTop = rect.top;\n  const containerHeight = rect.height;\n  const viewportHeight = window.innerHeight;\n\n  // Calculate linear scroll progress\n  let scrollProgress = Math.min(\n    Math.max((viewportHeight - containerTop) / (viewportHeight + containerHeight), 0),\n    1\n  );\n\n  // Apply faster scaling for a quick response\n  scrollProgress = scrollProgress * 2.5;\n\n  // Clamp to maximum of 1\n  scrollProgress = Math.min(scrollProgress, 1);\n\n  // Calculate rotation based on adjusted scroll progress\n   rotate1 = scrollProgress * maxRotate1;\n   rotate2 = scrollProgress * maxRotate2;\n\n  const stylesContainer = document.querySelector(':root');\n\n  stylesContainer.style.setProperty('--first-card-initial-degree', `${rotate1}deg`);\n  stylesContainer.style.setProperty('--second-card-initial-degree', `${rotate2}deg`);\n});","const DESKTOP_BREAKPOINT = \"1280\";\n\nconst swiper = new Swiper(\".swiper\", {\n  direction: \"horizontal\",\n  slidesPerView: 3,\n  autoplay: true,\n\n  breakpoints: {\n    320: {\n      slidesPerView: 1,\n      spaceBetween: 32,\n      loop: true,\n    },\n    768: {\n      slidesPerView: 2,\n      spaceBetween: 32,\n      loop: true,\n    },\n    1280: {\n      slidesPerView: 3,\n      spaceBetween: 32,\n    }\n  },\n  on: {\n    breakpoint(swiper, breakpointParams) {\n      if (swiper.currentBreakpoint === DESKTOP_BREAKPOINT) {\n        // Reset to the first item\n        swiper.slideToLoop(0);\n      }\n    }\n  }\n});"],"names":["animateTextCount","element","finishNumber","speedProgress","duration","start","step","timestamp","timeFraction","quad","shift","intersectionObserverCallback","entries","entry","options","observer","body","overlayMenu","burgerMenu","closeMenu","menuLinks","closeMenuWithAnimation","link","header","headerHeight","e","targetId","targetElement","offsetPosition","container","maxRotate1","maxRotate2","rotate1","rotate2","containerVisible","rect","containerTop","containerHeight","viewportHeight","scrollProgress","stylesContainer","DESKTOP_BREAKPOINT","swiper","breakpointParams"],"mappings":"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"}