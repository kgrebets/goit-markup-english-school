{"version":3,"file":"index.js","sources":["../src/animate-text-count.js","../src/leave-application.js"],"sourcesContent":["export default function animateTextCount(element, finishNumber, speedProgress = 3, duration = 200) {\n  let start = performance.now();\n\n  function step(timestamp) {\n    if (start === undefined) {\n      start = timestamp;\n    }\n\n    const timeFraction = (timestamp - start) / duration;\n    const quad = Math.pow(timeFraction, speedProgress);\n    const shift = Math.abs(Math.min(quad, 1000)).toFixed();\n\n    element.innerHTML = shift;\n\n    if (shift < finishNumber) {\n      requestAnimationFrame(step);\n    }\n  }\n\n  requestAnimationFrame(step);\n}","import animateTextCount from './animate-text-count.js';\n\nconst intersectionObserverCallback = (entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      animateTextCount(\n        document.querySelector('.side-image-content-title'),\n        1000,\n        3,\n      );\n    }\n  });\n};\n\nconst options = {\n  root: document,\n  rootMargin: '0px',\n  threshold: 0.8,\n};\n\nconst observer = new IntersectionObserver(intersectionObserverCallback, options);\nobserver.observe(document.querySelector('.leave-an-application'));"],"names":["animateTextCount","element","finishNumber","speedProgress","duration","start","step","timestamp","timeFraction","quad","shift","intersectionObserverCallback","entries","entry","options","observer"],"mappings":"ssBAAe,SAASA,EAAiBC,EAASC,EAAcC,EAAgB,EAAGC,EAAW,IAAK,CACjG,IAAIC,EAAQ,YAAY,MAExB,SAASC,EAAKC,EAAW,CACnBF,IAAU,SACZA,EAAQE,GAGV,MAAMC,GAAgBD,EAAYF,GAASD,EACrCK,EAAO,KAAK,IAAID,EAAcL,CAAa,EAC3CO,EAAQ,KAAK,IAAI,KAAK,IAAID,EAAM,GAAI,CAAC,EAAE,UAE7CR,EAAQ,UAAYS,EAEhBA,EAAQR,GACV,sBAAsBI,CAAI,CAE7B,CAED,sBAAsBA,CAAI,CAC5B,CClBA,MAAMK,EAAgCC,GAAY,CAChDA,EAAQ,QAASC,GAAU,CACrBA,EAAM,gBACRb,EACE,SAAS,cAAc,2BAA2B,EAClD,IACA,CACR,CAEA,CAAG,CACH,EAEMc,EAAU,CACd,KAAM,SACN,WAAY,MACZ,UAAW,EACb,EAEMC,EAAW,IAAI,qBAAqBJ,EAA8BG,CAAO,EAC/EC,EAAS,QAAQ,SAAS,cAAc,uBAAuB,CAAC"}